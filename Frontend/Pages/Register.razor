@page "/register"
@using Frontend.Services
@inject NavigationManager Navigation
@inject IAuthService AuthService

<div class="fullscreen-bg">
    <div class="login-card enhanced">
        <h2 class="login-title">Rejestracja</h2>

        @if (!string.IsNullOrWhiteSpace(Error))
        {
            <p class="error">@Error</p>
        }

        <div class="input-wrapper">
            <i class="bi bi-person-fill input-icon"></i>
            <InputText class="input-field" @bind-Value="Username" placeholder="Nazwa użytkownika" />
        </div>

        <div class="input-wrapper">
            <i class="bi bi-envelope-fill input-icon"></i>
            <InputText class="input-field" @bind-Value="Email" placeholder="Email" />
        </div>

        <div class="input-wrapper">
            <i class="bi bi-lock-fill input-icon"></i>
            <InputText class="input-field" @bind-Value="Password" type="password" placeholder="Hasło" />
        </div>

        <div class="input-wrapper">
            <i class="bi bi-lock-fill input-icon"></i>
            <InputText class="input-field" @bind-Value="RepeatPassword" type="password" placeholder="Powtórz hasło" />
        </div>

        <button @onclick="RegisterUser" class="btn login-btn">Zarejestruj się</button>

        <div class="auth-links center-row">
            <span>Masz już konto?</span>
            <a href="/login" style="margin-left: 0.4rem;">Zaloguj się</a>
        </div>
    </div>
</div>

@code {
    string Username = "";
    string Email = "";
    string Password = "";
    string RepeatPassword = "";
    string Error = "";

    private async Task RegisterUser()
    {
        if (Password != RepeatPassword)
        {
            Error = "Hasła nie są takie same.";
            return;
        }

        var success = await AuthService.Register(Username, Email, Password);
        if (!success)
        {
            Error = "Nie udało się zarejestrować. Sprawdź dane.";
        }
        else
        {
            Navigation.NavigateTo("/");
        }
    }
}
